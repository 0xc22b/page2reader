{namespace wit.user.soy.user}

/**
 * init
 * @param username
 * @param email
 * @param didConfirmEmail
 */
{template .init}
  {call wit.base.soy.base.init}
    {param css}
      {call wit.user.soy.user.css_ /}
    {/param}
    {param opt_js}
      {call wit.user.soy.user.js_ /}
    {/param}
    {param content}
      {call wit.user.soy.user.content_ data="all" /}
    {/param}
  {/call}
{/template}

/**
 * initDebug
 * @param username
 * @param email
 * @param didConfirmEmail
 */
{template .initDebug}
  {call wit.base.soy.base.init}
    {param css}
      {call wit.user.soy.user.cssDebug_ /}
    {/param}
    {param opt_js}
      {call wit.user.soy.user.jsDebug_ /}
    {/param}
    {param content}
      {call wit.user.soy.user.content_ data="all" /}
    {/param}
  {/call}
{/template}


/**
 * content_
 * @param readerEmail
 * @param username
 * @param email
 * @param didConfirmEmail
 */
{template .content_}

  {call wit.base.soy.base.headerWithHome}
    {param title}Settings{/param}
  {/call}

  <div class="{css main-container}">
    <div class="{css main} {css wrapper} {css clearfix}">
      <section class="{css settings} {css clearfix}">
        <div class="{css left}">
          <p class="{css name}">Reader's email:</p>
        </div>
        <div class="{css right}">
          <p id="readerEmailLb" class="{css value}">{if $readerEmail}{$readerEmail}{else}&nbsp;{/if}</p>
          <button id="showChangeReaderEmailBtn" class="{css btn}">Change reader's email</button>
          <div id="changeReaderEmailView" class="{css view}">
            <span id="changeReaderEmailErrLb" class="{css err}">&nbsp;</span>
            <input id="changeReaderEmailTB" type="text" placeholder="New reader's email" class="{css input}">
            <button id="changeReaderEmailOkBtn" type="button" class="{css ok-btn}">OK</button>
          </div>
        </div>
      </section>
      <section class="{css settings} {css clearfix}">
        <div class="{css left}">
          <p class="{css name}">Username:</p>
        </div>
        <div class="{css right}">
          <p id="usernameLb" class="{css value}">{$username}</p>
          <button id="showChangeUsernameBtn" class="{css btn}">Change username</button>
          <div id="changeUsernameView" class="{css view}">
            <span id="changeUsernameErrLb" class="{css err}">&nbsp;</span>
            <input id="changeUsernameTB" type="text" placeholder="New username" class="{css input}">
            <span id="changeUsernamePasswordErrLb" class="{css err}">&nbsp;</span>
            <input id="changeUsernamePasswordTB" type="password" placeholder="Password" class="{css input}">
            <button id="changeUsernameOkBtn" type="button" class="{css ok-btn}">OK</button>
          </div> 
        </div>
      </section>
      <section class="{css settings} {css clearfix}">
        <div class="{css left}">
          <p class="{css name}">Email:</p>
        </div>
        <div class="{css right}">
          <p id="emailLb" class="{css value}">{$email}</p>
          <button id="resendEmailConfirmBtn" class="{css second-btn}" data-did-confirm-email="{$didConfirmEmail}">
            Resend email verification
          </button>
          <button id="showChangeEmailBtn" class="{css btn}">Change email</button>
          <div id="changeEmailView" class="{css view}">
            <span id="changeEmailErrLb" class="{css err}">&nbsp;</span>
            <input id="changeEmailTB" type="text" placeholder="New email" class="{css input}">
            <span id="changeEmailPasswordErrLb" class="{css err}">&nbsp;</span>
            <input id="changeEmailPasswordTB" type="password" placeholder="Password" class="{css input}">
            <button id="changeEmailOkBtn" type="button" class="{css ok-btn}">OK</button>
          </div> 
        </div>
      </section>
      <section class="{css settings} {css clearfix}">
        <div class="{css left} {css left-blank}">
          <p class="{css name}">&nbsp;</p>
        </div>
        <div class="{css right}">
          <button id="showChangePasswordBtn" class="{css btn}">Change password</button>
          <div id="changePasswordView" class="{css view}">
            <span id="changeNewPasswordErrLb" class="{css err}">&nbsp;</span>
            <input id="changeNewPasswordTB" type="password" placeholder="New password" class="{css input}">
            <span id="changeRepeatPasswordErrLb" class="{css err}">&nbsp;</span>
            <input id="changeRepeatPasswordTB" type="password" placeholder="Repeat password" class="{css input}">
            <span id="changePasswordErrLb" class="{css err}">&nbsp;</span>
            <input id="changePasswordTB" type="password" placeholder="Password" class="{css input}">
            <button id="changePasswordOkBtn" type="button" class="{css ok-btn}">OK</button>
          </div> 
        </div>
      </section>
      <section class="{css settings}">
        <div class="{css left} {css left-blank}">
          <p class="{css name}">&nbsp;</p>
        </div>
        <div class="{css right}">
          <button id="showDeleteAccountBtn" class="{css btn}">Delete account</button>
          <div id="deleteAccountView" class="{css view}">
            <span id="deleteAccountPasswordErrLb" class="{css err}">&nbsp;</span>
            <input id="deleteAccountPasswordTB" type="password" placeholder="Password" class="{css input}">
            <button id="deleteAccountOkBtn" type="button" class="{css ok-btn}">OK</button>
          </div> 
        </div>
      </section>
    </div> <!-- #main -->
  </div> <!-- #main-container -->

  {call wit.base.soy.base.loggedInFooter /}
{/template}

/**
 * css_
 */
{template .css_}
css/user-compiled.css
{/template}

/**
 * cssDebug_
 */
{template .cssDebug_}
css/user-debug.css
{/template}


/**
 * js_
 */
{template .js_}
<script src="js/user-compiled.js"></script>
<script>
  new wit.user.User();
</script>
{/template}

/**
 * jsDebug_
 */
{template .jsDebug_}
<script src="closure/wit/user/cssrenamingmap/user-debug.js"></script>
<script src="closure/closure-library/closure/goog/base.js"></script>
<script src="closure/wit/deps.js"></script>
<script>
  goog.require("wit.user.User");
</script>
<script>
  new wit.user.User();
</script>
{/template}
